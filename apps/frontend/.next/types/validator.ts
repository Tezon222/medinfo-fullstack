// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap } from "./routes.js";
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js";

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
	default:
		| React.ComponentType<{ params: Promise<ParamMap[Route]> } & any>
		| ((
				props: { params: Promise<ParamMap[Route]> } & any
		  ) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>);
	generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[];
	generateMetadata?: (
		props: { params: Promise<ParamMap[Route]> } & any,
		parent: ResolvingMetadata
	) => Promise<any> | any;
	generateViewport?: (
		props: { params: Promise<ParamMap[Route]> } & any,
		parent: ResolvingViewport
	) => Promise<any> | any;
	metadata?: any;
	viewport?: any;
};

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
	default:
		| React.ComponentType<LayoutProps<Route>>
		| ((
				props: LayoutProps<Route>
		  ) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>);
	generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[];
	generateMetadata?: (
		props: { params: Promise<ParamMap[Route]> } & any,
		parent: ResolvingMetadata
	) => Promise<any> | any;
	generateViewport?: (
		props: { params: Promise<ParamMap[Route]> } & any,
		parent: ResolvingViewport
	) => Promise<any> | any;
	metadata?: any;
	viewport?: any;
};

// Validate ../../app/(dashboard)/doctor/community/[slug]/page.tsx
{
	type __IsExpected<Specific extends AppPageConfig<"/doctor/community/[slug]">> = Specific;
	const handler = {} as typeof import("../../app/(dashboard)/doctor/community/[slug]/page.js");
	type __Check = __IsExpected<typeof handler>;
	// @ts-ignore
	type __Unused = __Check;
}

// Validate ../../app/(dashboard)/doctor/community/page.tsx
{
	type __IsExpected<Specific extends AppPageConfig<"/doctor/community">> = Specific;
	const handler = {} as typeof import("../../app/(dashboard)/doctor/community/page.js");
	type __Check = __IsExpected<typeof handler>;
	// @ts-ignore
	type __Unused = __Check;
}

// Validate ../../app/(dashboard)/doctor/messages/page.tsx
{
	type __IsExpected<Specific extends AppPageConfig<"/doctor/messages">> = Specific;
	const handler = {} as typeof import("../../app/(dashboard)/doctor/messages/page.js");
	type __Check = __IsExpected<typeof handler>;
	// @ts-ignore
	type __Unused = __Check;
}

// Validate ../../app/(dashboard)/doctor/page.tsx
{
	type __IsExpected<Specific extends AppPageConfig<"/doctor">> = Specific;
	const handler = {} as typeof import("../../app/(dashboard)/doctor/page.js");
	type __Check = __IsExpected<typeof handler>;
	// @ts-ignore
	type __Unused = __Check;
}

// Validate ../../app/(dashboard)/doctor/profile/page.tsx
{
	type __IsExpected<Specific extends AppPageConfig<"/doctor/profile">> = Specific;
	const handler = {} as typeof import("../../app/(dashboard)/doctor/profile/page.js");
	type __Check = __IsExpected<typeof handler>;
	// @ts-ignore
	type __Unused = __Check;
}

// Validate ../../app/(dashboard)/doctor/settings/page.tsx
{
	type __IsExpected<Specific extends AppPageConfig<"/doctor/settings">> = Specific;
	const handler = {} as typeof import("../../app/(dashboard)/doctor/settings/page.js");
	type __Check = __IsExpected<typeof handler>;
	// @ts-ignore
	type __Unused = __Check;
}

// Validate ../../app/(dashboard)/patient/[slug]/page.tsx
{
	type __IsExpected<Specific extends AppPageConfig<"/patient/[slug]">> = Specific;
	const handler = {} as typeof import("../../app/(dashboard)/patient/[slug]/page.js");
	type __Check = __IsExpected<typeof handler>;
	// @ts-ignore
	type __Unused = __Check;
}

// Validate ../../app/(dashboard)/patient/appointment/page.tsx
{
	type __IsExpected<Specific extends AppPageConfig<"/patient/appointment">> = Specific;
	const handler = {} as typeof import("../../app/(dashboard)/patient/appointment/page.js");
	type __Check = __IsExpected<typeof handler>;
	// @ts-ignore
	type __Unused = __Check;
}

// Validate ../../app/(dashboard)/patient/community/[slug]/page.tsx
{
	type __IsExpected<Specific extends AppPageConfig<"/patient/community/[slug]">> = Specific;
	const handler = {} as typeof import("../../app/(dashboard)/patient/community/[slug]/page.js");
	type __Check = __IsExpected<typeof handler>;
	// @ts-ignore
	type __Unused = __Check;
}

// Validate ../../app/(dashboard)/patient/community/page.tsx
{
	type __IsExpected<Specific extends AppPageConfig<"/patient/community">> = Specific;
	const handler = {} as typeof import("../../app/(dashboard)/patient/community/page.js");
	type __Check = __IsExpected<typeof handler>;
	// @ts-ignore
	type __Unused = __Check;
}

// Validate ../../app/(dashboard)/patient/community/topic/page.tsx
{
	type __IsExpected<Specific extends AppPageConfig<"/patient/community/topic">> = Specific;
	const handler = {} as typeof import("../../app/(dashboard)/patient/community/topic/page.js");
	type __Check = __IsExpected<typeof handler>;
	// @ts-ignore
	type __Unused = __Check;
}

// Validate ../../app/(dashboard)/patient/messages/page.tsx
{
	type __IsExpected<Specific extends AppPageConfig<"/patient/messages">> = Specific;
	const handler = {} as typeof import("../../app/(dashboard)/patient/messages/page.js");
	type __Check = __IsExpected<typeof handler>;
	// @ts-ignore
	type __Unused = __Check;
}

// Validate ../../app/(dashboard)/patient/page.tsx
{
	type __IsExpected<Specific extends AppPageConfig<"/patient">> = Specific;
	const handler = {} as typeof import("../../app/(dashboard)/patient/page.js");
	type __Check = __IsExpected<typeof handler>;
	// @ts-ignore
	type __Unused = __Check;
}

// Validate ../../app/(dashboard)/patient/pricing/page.tsx
{
	type __IsExpected<Specific extends AppPageConfig<"/patient/pricing">> = Specific;
	const handler = {} as typeof import("../../app/(dashboard)/patient/pricing/page.js");
	type __Check = __IsExpected<typeof handler>;
	// @ts-ignore
	type __Unused = __Check;
}

// Validate ../../app/(dashboard)/patient/profile/page.tsx
{
	type __IsExpected<Specific extends AppPageConfig<"/patient/profile">> = Specific;
	const handler = {} as typeof import("../../app/(dashboard)/patient/profile/page.js");
	type __Check = __IsExpected<typeof handler>;
	// @ts-ignore
	type __Unused = __Check;
}

// Validate ../../app/(dashboard)/patient/settings/page.tsx
{
	type __IsExpected<Specific extends AppPageConfig<"/patient/settings">> = Specific;
	const handler = {} as typeof import("../../app/(dashboard)/patient/settings/page.js");
	type __Check = __IsExpected<typeof handler>;
	// @ts-ignore
	type __Unused = __Check;
}

// Validate ../../app/(primary)/daily-tips/[id]/page.tsx
{
	type __IsExpected<Specific extends AppPageConfig<"/daily-tips/[id]">> = Specific;
	const handler = {} as typeof import("../../app/(primary)/daily-tips/[id]/page.js");
	type __Check = __IsExpected<typeof handler>;
	// @ts-ignore
	type __Unused = __Check;
}

// Validate ../../app/(primary)/forgot-password/page.tsx
{
	type __IsExpected<Specific extends AppPageConfig<"/forgot-password">> = Specific;
	const handler = {} as typeof import("../../app/(primary)/forgot-password/page.js");
	type __Check = __IsExpected<typeof handler>;
	// @ts-ignore
	type __Unused = __Check;
}

// Validate ../../app/(primary)/library/disease/[name]/page.tsx
{
	type __IsExpected<Specific extends AppPageConfig<"/library/disease/[name]">> = Specific;
	const handler = {} as typeof import("../../app/(primary)/library/disease/[name]/page.js");
	type __Check = __IsExpected<typeof handler>;
	// @ts-ignore
	type __Unused = __Check;
}

// Validate ../../app/(primary)/library/page.tsx
{
	type __IsExpected<Specific extends AppPageConfig<"/library">> = Specific;
	const handler = {} as typeof import("../../app/(primary)/library/page.js");
	type __Check = __IsExpected<typeof handler>;
	// @ts-ignore
	type __Unused = __Check;
}

// Validate ../../app/(primary)/page.tsx
{
	type __IsExpected<Specific extends AppPageConfig<"/">> = Specific;
	const handler = {} as typeof import("../../app/(primary)/page.js");
	type __Check = __IsExpected<typeof handler>;
	// @ts-ignore
	type __Unused = __Check;
}

// Validate ../../app/(primary)/signin/page.tsx
{
	type __IsExpected<Specific extends AppPageConfig<"/signin">> = Specific;
	const handler = {} as typeof import("../../app/(primary)/signin/page.js");
	type __Check = __IsExpected<typeof handler>;
	// @ts-ignore
	type __Unused = __Check;
}

// Validate ../../app/(primary)/signup/page.tsx
{
	type __IsExpected<Specific extends AppPageConfig<"/signup">> = Specific;
	const handler = {} as typeof import("../../app/(primary)/signup/page.js");
	type __Check = __IsExpected<typeof handler>;
	// @ts-ignore
	type __Unused = __Check;
}

// Validate ../../app/(dashboard)/doctor/layout.tsx
{
	type __IsExpected<Specific extends LayoutConfig<"/doctor">> = Specific;
	const handler = {} as typeof import("../../app/(dashboard)/doctor/layout.js");
	type __Check = __IsExpected<typeof handler>;
	// @ts-ignore
	type __Unused = __Check;
}

// Validate ../../app/(dashboard)/patient/layout.tsx
{
	type __IsExpected<Specific extends LayoutConfig<"/patient">> = Specific;
	const handler = {} as typeof import("../../app/(dashboard)/patient/layout.js");
	type __Check = __IsExpected<typeof handler>;
	// @ts-ignore
	type __Unused = __Check;
}

// Validate ../../app/(primary)/layout.tsx
{
	type __IsExpected<Specific extends LayoutConfig<"/">> = Specific;
	const handler = {} as typeof import("../../app/(primary)/layout.js");
	type __Check = __IsExpected<typeof handler>;
	// @ts-ignore
	type __Unused = __Check;
}

// Validate ../../app/layout.tsx
{
	type __IsExpected<Specific extends LayoutConfig<"/">> = Specific;
	const handler = {} as typeof import("../../app/layout.js");
	type __Check = __IsExpected<typeof handler>;
	// @ts-ignore
	type __Unused = __Check;
}
